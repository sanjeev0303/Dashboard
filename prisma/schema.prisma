

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?   @default("no-image")
  userName      String
  hashedPassword String
  isApproved    Boolean   @default(false)
  isAdmin       Boolean   @default(false)
  location      String    @default("no-location")
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}


model Product {
  id      String  @id @default(cuid())
  name    String
  price   Float
  image   String?
  revenue Int
}

model Orders {
  id           String   @id @default(cuid())
  customerName String
  address      String
  totalAmount  Int
  orderNumber  Int
  date         DateTime @default(now())
}

model Customers {
  id     String @id @default(cuid())
  name   String
  orders Int
  image  String
}
